{"version":3,"sources":["App.tsx","page/HomePage.tsx","page/ErrorPage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleItem.tsx","components/PeopleList.tsx","page/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","ErrorPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleItem","human","people","name","sex","born","died","fatherName","motherName","slug","mother","find","pers","father","slugName","useParams","PeopleList","useState","isNoPeople","setIsNoPeople","useEffect","length","map","PeoplePage","setPeople","isLoading","setIsLoading","isError","setIsError","date","catch","finally","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c538acc2.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport cn from 'classnames';\nimport './App.scss';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  human: Person,\n  people: Person[],\n};\n\nexport const PeopleItem: React.FC<Props> = ({\n  human,\n  people,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother = people.find(pers => pers.name === motherName),\n    father = people.find(pers => pers.name === fatherName),\n  } = human;\n\n  const { slugName } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === slugName })}\n    >\n      <td>\n        <Link\n          to={`../${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      {mother ? (\n        <td>\n          <Link to={`../${mother.slug}`} className=\"has-text-danger\">\n            {mother.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{motherName || '-'}</td>\n      )}\n\n      {father ? (\n        <td>\n          <Link to={`${father.slug}`}>\n            {father.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { PeopleItem } from './PeopleItem';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({\n  people,\n}) => {\n  const [isNoPeople, setIsNoPeople] = useState(false);\n\n  useEffect(() => {\n    if (!people.length) {\n      setIsNoPeople(true);\n    }\n  }, [people]);\n\n  return (\n    <>\n      {isNoPeople ? (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      ) : (\n        <>\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(pers => (\n                <PeopleItem\n                  key={pers.slug}\n                  human={pers}\n                  people={people}\n                />\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleList } from '../components/PeopleList';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(date => setPeople(date))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && !isError ? (\n            <Loader />\n          ) : (\n            <PeopleList people={people} />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './page/HomePage';\nimport { ErrorPage } from './page/ErrorPage';\nimport { PeoplePage } from './page/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"..\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slugName\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}